"""initial_migration

Revision ID: 0872e89e8798
Revises:
Create Date: 2025-09-24 23:53:59.219462

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0872e89e8798"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "sensor_metrics",
        sa.Column("timestamp", postgresql.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("sensor_id", sa.Text(), nullable=False),
        sa.Column("location", sa.Text(), nullable=False),
        sa.Column("sensor_type", sa.Text(), nullable=False),
        sa.Column("temperature", sa.Float(precision=53), nullable=True),
        sa.Column("humidity", sa.Float(precision=53), nullable=True),
        sa.Column("pressure", sa.Float(precision=53), nullable=True),
        sa.PrimaryKeyConstraint("timestamp", "sensor_id"),
    )
    # ### end Alembic commands ###
    op.execute("SELECT create_hypertable('sensor_metrics', 'timestamp', chunk_time_interval => INTERVAL '1 day');")

    op.create_index(
        "idx_sensor_metrics_sensor_time",
        "sensor_metrics",
        ["sensor_id", "timestamp"],
        unique=False,
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_sensor_metrics_sensor_time", table_name="sensor_metrics")
    op.drop_table("sensor_metrics")
    # ### end Alembic commands ###
